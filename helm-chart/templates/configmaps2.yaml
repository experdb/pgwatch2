{{- $root := . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgwatch2-config
data:
  monitoring.sql: |
    BEGIN;
    INSERT INTO pgwatch2.preset_config (pc_name, pc_description, pc_config) values ('{{ $root.Values.metrics_preset.name }}', '{{ $root.Values.metrics_preset.description }}', '{{ $root.Values.metrics_preset.metrics }}')
    on conflict (pc_name)
    DO UPDATE set pc_description='{{ $root.Values.metrics_preset.description }}', pc_config='{{ $root.Values.metrics_preset.metrics }}' where pgwatch2.preset_config.pc_name='{{ $root.Values.metrics_preset.name }}';
    update pgwatch2.monitored_db set md_is_enabled=false;
    {{- range .Values.databases }}
    {{- $db := . }}
    {{- range $d := .dbs }}
    insert into pgwatch2.monitored_db (md_unique_name, md_preset_config_name, md_config, md_hostname, md_port, md_dbname, md_user, md_password, md_sslmode, md_is_enabled, md_is_superuser)
      values ('{{ $db.host }}_{{ $d }}', '{{ $db.grafana_preset_metrics | default "full" }}', null, '{{ $db.host }}', '{{ $db.port | default "5432" }}', '{{ $d }}', '{{ $db.user }}', '{{ $db.password }}', '{{ $db.sslmode | default "disable" }}', false, true)
    on conflict (md_unique_name)
    do update set md_sslmode='{{ $db.sslmode | default "disable" }}', md_preset_config_name='{{ $db.grafana_preset_metrics | default "full" }}', md_config=null, md_hostname='{{ $db.host }}', md_port='{{ $db.port }}', md_dbname='{{ $d }}', md_user= '{{ $db.user }}', md_password='{{ $db.password }}', md_is_enabled=false, md_is_superuser=true;
    update pgwatch2.monitored_db set md_is_enabled=true where md_unique_name='{{ $db.host }}_{{ $d }}';
    {{- end }}
    {{- end }}
    COMMIT;

  run.sh: |
    #!/bin/sh

    psql -f /pgwatch2/bootstrap/custom/monitoring.sql


